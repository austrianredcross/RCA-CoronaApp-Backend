// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: export.proto

package at.roteskreuz.covidapp.protobuf;

public final class Export {
  private Export() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TemporaryExposureKeyExportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TemporaryExposureKeyExport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Time window of keys in this file based on arrival to server, in UTC
     * seconds
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     * @return Whether the startTimestamp field is set.
     */
    boolean hasStartTimestamp();
    /**
     * <pre>
     * Time window of keys in this file based on arrival to server, in UTC
     * seconds
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     * @return The startTimestamp.
     */
    long getStartTimestamp();

    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     * @return Whether the endTimestamp field is set.
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     * @return The endTimestamp.
     */
    long getEndTimestamp();

    /**
     * <pre>
     * Region for which these keys came from (e.g., country)
     * </pre>
     *
     * <code>optional string region = 3;</code>
     * @return Whether the region field is set.
     */
    boolean hasRegion();
    /**
     * <pre>
     * Region for which these keys came from (e.g., country)
     * </pre>
     *
     * <code>optional string region = 3;</code>
     * @return The region.
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * Region for which these keys came from (e.g., country)
     * </pre>
     *
     * <code>optional string region = 3;</code>
     * @return The bytes for region.
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
     * Note: Not yet supported on iOS. Use values of 1 for both.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     * @return Whether the batchNum field is set.
     */
    boolean hasBatchNum();
    /**
     * <pre>
     * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
     * Note: Not yet supported on iOS. Use values of 1 for both.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     * @return The batchNum.
     */
    int getBatchNum();

    /**
     * <code>optional int32 batch_size = 5;</code>
     * @return Whether the batchSize field is set.
     */
    boolean hasBatchSize();
    /**
     * <code>optional int32 batch_size = 5;</code>
     * @return The batchSize.
     */
    int getBatchSize();

    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    java.util.List<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo> 
        getSignatureInfosList();
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getSignatureInfos(int index);
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    int getSignatureInfosCount();
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> 
        getSignatureInfosOrBuilderList();
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder getSignatureInfosOrBuilder(
        int index);

    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    java.util.List<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey> 
        getKeysList();
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey getKeys(int index);
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    int getKeysCount();
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder> 
        getKeysOrBuilderList();
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Protobuf definition for exports of confirmed temporary exposure keys.
   * The full file format is documented under "Exposure Key Export File Format
   * and Verification" at https://www.google.com/covid19/exposurenotifications/
   * These files have a 16-byte, space-padded header before the protobuf data
   * starts. They will be contained in a zip archive, alongside a signature
   * file verifying the contents.
   * </pre>
   *
   * Protobuf type {@code TemporaryExposureKeyExport}
   */
  public static final class TemporaryExposureKeyExport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TemporaryExposureKeyExport)
      TemporaryExposureKeyExportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TemporaryExposureKeyExport.newBuilder() to construct.
    private TemporaryExposureKeyExport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TemporaryExposureKeyExport() {
      region_ = "";
      signatureInfos_ = java.util.Collections.emptyList();
      keys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TemporaryExposureKeyExport();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TemporaryExposureKeyExport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              startTimestamp_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              endTimestamp_ = input.readFixed64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              region_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              batchNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              batchSize_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                signatureInfos_ = new java.util.ArrayList<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              signatureInfos_.add(
                  input.readMessage(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                keys_ = new java.util.ArrayList<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey>();
                mutable_bitField0_ |= 0x00000040;
              }
              keys_.add(
                  input.readMessage(at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          signatureInfos_ = java.util.Collections.unmodifiableList(signatureInfos_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          keys_ = java.util.Collections.unmodifiableList(keys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKeyExport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKeyExport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.class, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.Builder.class);
    }

    private int bitField0_;
    public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
    private long startTimestamp_;
    /**
     * <pre>
     * Time window of keys in this file based on arrival to server, in UTC
     * seconds
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     * @return Whether the startTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Time window of keys in this file based on arrival to server, in UTC
     * seconds
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     * @return The startTimestamp.
     */
    @java.lang.Override
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int END_TIMESTAMP_FIELD_NUMBER = 2;
    private long endTimestamp_;
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     * @return Whether the endTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     * @return The endTimestamp.
     */
    @java.lang.Override
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int REGION_FIELD_NUMBER = 3;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * Region for which these keys came from (e.g., country)
     * </pre>
     *
     * <code>optional string region = 3;</code>
     * @return Whether the region field is set.
     */
    @java.lang.Override
    public boolean hasRegion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Region for which these keys came from (e.g., country)
     * </pre>
     *
     * <code>optional string region = 3;</code>
     * @return The region.
     */
    @java.lang.Override
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          region_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Region for which these keys came from (e.g., country)
     * </pre>
     *
     * <code>optional string region = 3;</code>
     * @return The bytes for region.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BATCH_NUM_FIELD_NUMBER = 4;
    private int batchNum_;
    /**
     * <pre>
     * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
     * Note: Not yet supported on iOS. Use values of 1 for both.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     * @return Whether the batchNum field is set.
     */
    @java.lang.Override
    public boolean hasBatchNum() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
     * Note: Not yet supported on iOS. Use values of 1 for both.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     * @return The batchNum.
     */
    @java.lang.Override
    public int getBatchNum() {
      return batchNum_;
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 5;
    private int batchSize_;
    /**
     * <code>optional int32 batch_size = 5;</code>
     * @return Whether the batchSize field is set.
     */
    @java.lang.Override
    public boolean hasBatchSize() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 batch_size = 5;</code>
     * @return The batchSize.
     */
    @java.lang.Override
    public int getBatchSize() {
      return batchSize_;
    }

    public static final int SIGNATURE_INFOS_FIELD_NUMBER = 6;
    private java.util.List<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo> signatureInfos_;
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    @java.lang.Override
    public java.util.List<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo> getSignatureInfosList() {
      return signatureInfos_;
    }
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> 
        getSignatureInfosOrBuilderList() {
      return signatureInfos_;
    }
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    @java.lang.Override
    public int getSignatureInfosCount() {
      return signatureInfos_.size();
    }
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getSignatureInfos(int index) {
      return signatureInfos_.get(index);
    }
    /**
     * <pre>
     * Information about signatures
     * </pre>
     *
     * <code>repeated .SignatureInfo signature_infos = 6;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder getSignatureInfosOrBuilder(
        int index) {
      return signatureInfos_.get(index);
    }

    public static final int KEYS_FIELD_NUMBER = 7;
    private java.util.List<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey> keys_;
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    @java.lang.Override
    public java.util.List<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey> getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * The TemporaryExposureKeys themselves
     * </pre>
     *
     * <code>repeated .TemporaryExposureKey keys = 7;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, endTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, region_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, batchNum_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, batchSize_);
      }
      for (int i = 0; i < signatureInfos_.size(); i++) {
        output.writeMessage(6, signatureInfos_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(7, keys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, endTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, region_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, batchNum_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, batchSize_);
      }
      for (int i = 0; i < signatureInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, signatureInfos_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, keys_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport)) {
        return super.equals(obj);
      }
      at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport other = (at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport) obj;

      if (hasStartTimestamp() != other.hasStartTimestamp()) return false;
      if (hasStartTimestamp()) {
        if (getStartTimestamp()
            != other.getStartTimestamp()) return false;
      }
      if (hasEndTimestamp() != other.hasEndTimestamp()) return false;
      if (hasEndTimestamp()) {
        if (getEndTimestamp()
            != other.getEndTimestamp()) return false;
      }
      if (hasRegion() != other.hasRegion()) return false;
      if (hasRegion()) {
        if (!getRegion()
            .equals(other.getRegion())) return false;
      }
      if (hasBatchNum() != other.hasBatchNum()) return false;
      if (hasBatchNum()) {
        if (getBatchNum()
            != other.getBatchNum()) return false;
      }
      if (hasBatchSize() != other.hasBatchSize()) return false;
      if (hasBatchSize()) {
        if (getBatchSize()
            != other.getBatchSize()) return false;
      }
      if (!getSignatureInfosList()
          .equals(other.getSignatureInfosList())) return false;
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartTimestamp()) {
        hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStartTimestamp());
      }
      if (hasEndTimestamp()) {
        hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEndTimestamp());
      }
      if (hasRegion()) {
        hash = (37 * hash) + REGION_FIELD_NUMBER;
        hash = (53 * hash) + getRegion().hashCode();
      }
      if (hasBatchNum()) {
        hash = (37 * hash) + BATCH_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getBatchNum();
      }
      if (hasBatchSize()) {
        hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBatchSize();
      }
      if (getSignatureInfosCount() > 0) {
        hash = (37 * hash) + SIGNATURE_INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureInfosList().hashCode();
      }
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Protobuf definition for exports of confirmed temporary exposure keys.
     * The full file format is documented under "Exposure Key Export File Format
     * and Verification" at https://www.google.com/covid19/exposurenotifications/
     * These files have a 16-byte, space-padded header before the protobuf data
     * starts. They will be contained in a zip archive, alongside a signature
     * file verifying the contents.
     * </pre>
     *
     * Protobuf type {@code TemporaryExposureKeyExport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TemporaryExposureKeyExport)
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKeyExport_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKeyExport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.class, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.Builder.class);
      }

      // Construct using at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureInfosFieldBuilder();
          getKeysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        region_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        batchNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        batchSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (signatureInfosBuilder_ == null) {
          signatureInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          signatureInfosBuilder_.clear();
        }
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          keysBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKeyExport_descriptor;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport getDefaultInstanceForType() {
        return at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.getDefaultInstance();
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport build() {
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport buildPartial() {
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport result = new at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.startTimestamp_ = startTimestamp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.endTimestamp_ = endTimestamp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.region_ = region_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.batchNum_ = batchNum_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.batchSize_ = batchSize_;
          to_bitField0_ |= 0x00000010;
        }
        if (signatureInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            signatureInfos_ = java.util.Collections.unmodifiableList(signatureInfos_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.signatureInfos_ = signatureInfos_;
        } else {
          result.signatureInfos_ = signatureInfosBuilder_.build();
        }
        if (keysBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            keys_ = java.util.Collections.unmodifiableList(keys_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.keys_ = keys_;
        } else {
          result.keys_ = keysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport) {
          return mergeFrom((at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport other) {
        if (other == at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport.getDefaultInstance()) return this;
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (other.hasRegion()) {
          bitField0_ |= 0x00000004;
          region_ = other.region_;
          onChanged();
        }
        if (other.hasBatchNum()) {
          setBatchNum(other.getBatchNum());
        }
        if (other.hasBatchSize()) {
          setBatchSize(other.getBatchSize());
        }
        if (signatureInfosBuilder_ == null) {
          if (!other.signatureInfos_.isEmpty()) {
            if (signatureInfos_.isEmpty()) {
              signatureInfos_ = other.signatureInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSignatureInfosIsMutable();
              signatureInfos_.addAll(other.signatureInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.signatureInfos_.isEmpty()) {
            if (signatureInfosBuilder_.isEmpty()) {
              signatureInfosBuilder_.dispose();
              signatureInfosBuilder_ = null;
              signatureInfos_ = other.signatureInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
              signatureInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignatureInfosFieldBuilder() : null;
            } else {
              signatureInfosBuilder_.addAllMessages(other.signatureInfos_);
            }
          }
        }
        if (keysBuilder_ == null) {
          if (!other.keys_.isEmpty()) {
            if (keys_.isEmpty()) {
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureKeysIsMutable();
              keys_.addAll(other.keys_);
            }
            onChanged();
          }
        } else {
          if (!other.keys_.isEmpty()) {
            if (keysBuilder_.isEmpty()) {
              keysBuilder_.dispose();
              keysBuilder_ = null;
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000040);
              keysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKeysFieldBuilder() : null;
            } else {
              keysBuilder_.addAllMessages(other.keys_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startTimestamp_ ;
      /**
       * <pre>
       * Time window of keys in this file based on arrival to server, in UTC
       * seconds
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       * @return Whether the startTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Time window of keys in this file based on arrival to server, in UTC
       * seconds
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       * @return The startTimestamp.
       */
      @java.lang.Override
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <pre>
       * Time window of keys in this file based on arrival to server, in UTC
       * seconds
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       * @param value The startTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000001;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time window of keys in this file based on arrival to server, in UTC
       * seconds
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       * @return Whether the endTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       * @return The endTimestamp.
       */
      @java.lang.Override
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       * @param value The endTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000002;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * Region for which these keys came from (e.g., country)
       * </pre>
       *
       * <code>optional string region = 3;</code>
       * @return Whether the region field is set.
       */
      public boolean hasRegion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Region for which these keys came from (e.g., country)
       * </pre>
       *
       * <code>optional string region = 3;</code>
       * @return The region.
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            region_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Region for which these keys came from (e.g., country)
       * </pre>
       *
       * <code>optional string region = 3;</code>
       * @return The bytes for region.
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Region for which these keys came from (e.g., country)
       * </pre>
       *
       * <code>optional string region = 3;</code>
       * @param value The region to set.
       * @return This builder for chaining.
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Region for which these keys came from (e.g., country)
       * </pre>
       *
       * <code>optional string region = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Region for which these keys came from (e.g., country)
       * </pre>
       *
       * <code>optional string region = 3;</code>
       * @param value The bytes for region to set.
       * @return This builder for chaining.
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        region_ = value;
        onChanged();
        return this;
      }

      private int batchNum_ ;
      /**
       * <pre>
       * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
       * Note: Not yet supported on iOS. Use values of 1 for both.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       * @return Whether the batchNum field is set.
       */
      @java.lang.Override
      public boolean hasBatchNum() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
       * Note: Not yet supported on iOS. Use values of 1 for both.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       * @return The batchNum.
       */
      @java.lang.Override
      public int getBatchNum() {
        return batchNum_;
      }
      /**
       * <pre>
       * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
       * Note: Not yet supported on iOS. Use values of 1 for both.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       * @param value The batchNum to set.
       * @return This builder for chaining.
       */
      public Builder setBatchNum(int value) {
        bitField0_ |= 0x00000008;
        batchNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * E.g., Batch 2 of 10. Ordinal, 1-based numbering.
       * Note: Not yet supported on iOS. Use values of 1 for both.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        batchNum_ = 0;
        onChanged();
        return this;
      }

      private int batchSize_ ;
      /**
       * <code>optional int32 batch_size = 5;</code>
       * @return Whether the batchSize field is set.
       */
      @java.lang.Override
      public boolean hasBatchSize() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 batch_size = 5;</code>
       * @return The batchSize.
       */
      @java.lang.Override
      public int getBatchSize() {
        return batchSize_;
      }
      /**
       * <code>optional int32 batch_size = 5;</code>
       * @param value The batchSize to set.
       * @return This builder for chaining.
       */
      public Builder setBatchSize(int value) {
        bitField0_ |= 0x00000010;
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batch_size = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        batchSize_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo> signatureInfos_ =
        java.util.Collections.emptyList();
      private void ensureSignatureInfosIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          signatureInfos_ = new java.util.ArrayList<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo>(signatureInfos_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.SignatureInfo, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder, at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> signatureInfosBuilder_;

      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public java.util.List<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo> getSignatureInfosList() {
        if (signatureInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatureInfos_);
        } else {
          return signatureInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public int getSignatureInfosCount() {
        if (signatureInfosBuilder_ == null) {
          return signatureInfos_.size();
        } else {
          return signatureInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getSignatureInfos(int index) {
        if (signatureInfosBuilder_ == null) {
          return signatureInfos_.get(index);
        } else {
          return signatureInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder setSignatureInfos(
          int index, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo value) {
        if (signatureInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignatureInfosIsMutable();
          signatureInfos_.set(index, value);
          onChanged();
        } else {
          signatureInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder setSignatureInfos(
          int index, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder builderForValue) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          signatureInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo value) {
        if (signatureInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(value);
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(
          int index, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo value) {
        if (signatureInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(index, value);
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(
          at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder builderForValue) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(builderForValue.build());
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(
          int index, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder builderForValue) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder addAllSignatureInfos(
          java.lang.Iterable<? extends at.roteskreuz.covidapp.protobuf.Export.SignatureInfo> values) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatureInfos_);
          onChanged();
        } else {
          signatureInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder clearSignatureInfos() {
        if (signatureInfosBuilder_ == null) {
          signatureInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          signatureInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public Builder removeSignatureInfos(int index) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.remove(index);
          onChanged();
        } else {
          signatureInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder getSignatureInfosBuilder(
          int index) {
        return getSignatureInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder getSignatureInfosOrBuilder(
          int index) {
        if (signatureInfosBuilder_ == null) {
          return signatureInfos_.get(index);  } else {
          return signatureInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> 
           getSignatureInfosOrBuilderList() {
        if (signatureInfosBuilder_ != null) {
          return signatureInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatureInfos_);
        }
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder addSignatureInfosBuilder() {
        return getSignatureInfosFieldBuilder().addBuilder(
            at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder addSignatureInfosBuilder(
          int index) {
        return getSignatureInfosFieldBuilder().addBuilder(
            index, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Information about signatures
       * </pre>
       *
       * <code>repeated .SignatureInfo signature_infos = 6;</code>
       */
      public java.util.List<at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder> 
           getSignatureInfosBuilderList() {
        return getSignatureInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.SignatureInfo, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder, at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> 
          getSignatureInfosFieldBuilder() {
        if (signatureInfosBuilder_ == null) {
          signatureInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              at.roteskreuz.covidapp.protobuf.Export.SignatureInfo, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder, at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder>(
                  signatureInfos_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          signatureInfos_ = null;
        }
        return signatureInfosBuilder_;
      }

      private java.util.List<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey> keys_ =
        java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          keys_ = new java.util.ArrayList<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey>(keys_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder> keysBuilder_;

      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public java.util.List<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey> getKeysList() {
        if (keysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keys_);
        } else {
          return keysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public int getKeysCount() {
        if (keysBuilder_ == null) {
          return keys_.size();
        } else {
          return keysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey getKeys(int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);
        } else {
          return keysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder setKeys(
          int index, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.set(index, value);
          onChanged();
        } else {
          keysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder setKeys(
          int index, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.set(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
        } else {
          keysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(
          int index, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(index, value);
          onChanged();
        } else {
          keysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(
          at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(
          int index, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey> values) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keys_);
          onChanged();
        } else {
          keysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder clearKeys() {
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          keysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public Builder removeKeys(int index) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.remove(index);
          onChanged();
        } else {
          keysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder getKeysBuilder(
          int index) {
        return getKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
          int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);  } else {
          return keysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder> 
           getKeysOrBuilderList() {
        if (keysBuilder_ != null) {
          return keysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keys_);
        }
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder addKeysBuilder() {
        return getKeysFieldBuilder().addBuilder(
            at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder addKeysBuilder(
          int index) {
        return getKeysFieldBuilder().addBuilder(
            index, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * The TemporaryExposureKeys themselves
       * </pre>
       *
       * <code>repeated .TemporaryExposureKey keys = 7;</code>
       */
      public java.util.List<at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder> 
           getKeysBuilderList() {
        return getKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder> 
          getKeysFieldBuilder() {
        if (keysBuilder_ == null) {
          keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder>(
                  keys_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          keys_ = null;
        }
        return keysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TemporaryExposureKeyExport)
    }

    // @@protoc_insertion_point(class_scope:TemporaryExposureKeyExport)
    private static final at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport();
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TemporaryExposureKeyExport>
        PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKeyExport>() {
      @java.lang.Override
      public TemporaryExposureKeyExport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TemporaryExposureKeyExport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TemporaryExposureKeyExport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemporaryExposureKeyExport> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyExport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignatureInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SignatureInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     * @return Whether the verificationKeyVersion field is set.
     */
    boolean hasVerificationKeyVersion();
    /**
     * <pre>
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     * @return The verificationKeyVersion.
     */
    java.lang.String getVerificationKeyVersion();
    /**
     * <pre>
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     * @return The bytes for verificationKeyVersion.
     */
    com.google.protobuf.ByteString
        getVerificationKeyVersionBytes();

    /**
     * <pre>
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_]
     * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     * @return Whether the verificationKeyId field is set.
     */
    boolean hasVerificationKeyId();
    /**
     * <pre>
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_]
     * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     * @return The verificationKeyId.
     */
    java.lang.String getVerificationKeyId();
    /**
     * <pre>
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_]
     * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     * @return The bytes for verificationKeyId.
     */
    com.google.protobuf.ByteString
        getVerificationKeyIdBytes();

    /**
     * <pre>
     * ASN.1 OID for Algorithm Identifier. Supported algorithms are
     * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     * @return Whether the signatureAlgorithm field is set.
     */
    boolean hasSignatureAlgorithm();
    /**
     * <pre>
     * ASN.1 OID for Algorithm Identifier. Supported algorithms are
     * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     * @return The signatureAlgorithm.
     */
    java.lang.String getSignatureAlgorithm();
    /**
     * <pre>
     * ASN.1 OID for Algorithm Identifier. Supported algorithms are
     * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     * @return The bytes for signatureAlgorithm.
     */
    com.google.protobuf.ByteString
        getSignatureAlgorithmBytes();
  }
  /**
   * Protobuf type {@code SignatureInfo}
   */
  public static final class SignatureInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SignatureInfo)
      SignatureInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignatureInfo.newBuilder() to construct.
    private SignatureInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignatureInfo() {
      verificationKeyVersion_ = "";
      verificationKeyId_ = "";
      signatureAlgorithm_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignatureInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignatureInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              verificationKeyVersion_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              verificationKeyId_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              signatureAlgorithm_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_SignatureInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_SignatureInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.class, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder.class);
    }

    private int bitField0_;
    public static final int VERIFICATION_KEY_VERSION_FIELD_NUMBER = 3;
    private volatile java.lang.Object verificationKeyVersion_;
    /**
     * <pre>
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     * @return Whether the verificationKeyVersion field is set.
     */
    @java.lang.Override
    public boolean hasVerificationKeyVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     * @return The verificationKeyVersion.
     */
    @java.lang.Override
    public java.lang.String getVerificationKeyVersion() {
      java.lang.Object ref = verificationKeyVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          verificationKeyVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Key version for rollovers
     * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     * @return The bytes for verificationKeyVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVerificationKeyVersionBytes() {
      java.lang.Object ref = verificationKeyVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        verificationKeyVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERIFICATION_KEY_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object verificationKeyId_;
    /**
     * <pre>
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_]
     * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     * @return Whether the verificationKeyId field is set.
     */
    @java.lang.Override
    public boolean hasVerificationKeyId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_]
     * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     * @return The verificationKeyId.
     */
    @java.lang.Override
    public java.lang.String getVerificationKeyId() {
      java.lang.Object ref = verificationKeyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          verificationKeyId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Alias with which to identify public key to be used for verification
     * Must be in character class [a-zA-Z0-9_]
     * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     * @return The bytes for verificationKeyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVerificationKeyIdBytes() {
      java.lang.Object ref = verificationKeyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        verificationKeyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 5;
    private volatile java.lang.Object signatureAlgorithm_;
    /**
     * <pre>
     * ASN.1 OID for Algorithm Identifier. Supported algorithms are
     * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     * @return Whether the signatureAlgorithm field is set.
     */
    @java.lang.Override
    public boolean hasSignatureAlgorithm() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * ASN.1 OID for Algorithm Identifier. Supported algorithms are
     * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     * @return The signatureAlgorithm.
     */
    @java.lang.Override
    public java.lang.String getSignatureAlgorithm() {
      java.lang.Object ref = signatureAlgorithm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signatureAlgorithm_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ASN.1 OID for Algorithm Identifier. Supported algorithms are
     * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     * @return The bytes for signatureAlgorithm.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSignatureAlgorithmBytes() {
      java.lang.Object ref = signatureAlgorithm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signatureAlgorithm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, verificationKeyVersion_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, verificationKeyId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, signatureAlgorithm_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, verificationKeyVersion_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, verificationKeyId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, signatureAlgorithm_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof at.roteskreuz.covidapp.protobuf.Export.SignatureInfo)) {
        return super.equals(obj);
      }
      at.roteskreuz.covidapp.protobuf.Export.SignatureInfo other = (at.roteskreuz.covidapp.protobuf.Export.SignatureInfo) obj;

      if (hasVerificationKeyVersion() != other.hasVerificationKeyVersion()) return false;
      if (hasVerificationKeyVersion()) {
        if (!getVerificationKeyVersion()
            .equals(other.getVerificationKeyVersion())) return false;
      }
      if (hasVerificationKeyId() != other.hasVerificationKeyId()) return false;
      if (hasVerificationKeyId()) {
        if (!getVerificationKeyId()
            .equals(other.getVerificationKeyId())) return false;
      }
      if (hasSignatureAlgorithm() != other.hasSignatureAlgorithm()) return false;
      if (hasSignatureAlgorithm()) {
        if (!getSignatureAlgorithm()
            .equals(other.getSignatureAlgorithm())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVerificationKeyVersion()) {
        hash = (37 * hash) + VERIFICATION_KEY_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVerificationKeyVersion().hashCode();
      }
      if (hasVerificationKeyId()) {
        hash = (37 * hash) + VERIFICATION_KEY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getVerificationKeyId().hashCode();
      }
      if (hasSignatureAlgorithm()) {
        hash = (37 * hash) + SIGNATURE_ALGORITHM_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureAlgorithm().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SignatureInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SignatureInfo)
        at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_SignatureInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_SignatureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.class, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder.class);
      }

      // Construct using at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        verificationKeyVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        verificationKeyId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        signatureAlgorithm_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_SignatureInfo_descriptor;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getDefaultInstanceForType() {
        return at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance();
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo build() {
        at.roteskreuz.covidapp.protobuf.Export.SignatureInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo buildPartial() {
        at.roteskreuz.covidapp.protobuf.Export.SignatureInfo result = new at.roteskreuz.covidapp.protobuf.Export.SignatureInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.verificationKeyVersion_ = verificationKeyVersion_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.verificationKeyId_ = verificationKeyId_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signatureAlgorithm_ = signatureAlgorithm_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof at.roteskreuz.covidapp.protobuf.Export.SignatureInfo) {
          return mergeFrom((at.roteskreuz.covidapp.protobuf.Export.SignatureInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo other) {
        if (other == at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance()) return this;
        if (other.hasVerificationKeyVersion()) {
          bitField0_ |= 0x00000001;
          verificationKeyVersion_ = other.verificationKeyVersion_;
          onChanged();
        }
        if (other.hasVerificationKeyId()) {
          bitField0_ |= 0x00000002;
          verificationKeyId_ = other.verificationKeyId_;
          onChanged();
        }
        if (other.hasSignatureAlgorithm()) {
          bitField0_ |= 0x00000004;
          signatureAlgorithm_ = other.signatureAlgorithm_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        at.roteskreuz.covidapp.protobuf.Export.SignatureInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (at.roteskreuz.covidapp.protobuf.Export.SignatureInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object verificationKeyVersion_ = "";
      /**
       * <pre>
       * Key version for rollovers
       * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       * @return Whether the verificationKeyVersion field is set.
       */
      public boolean hasVerificationKeyVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Key version for rollovers
       * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       * @return The verificationKeyVersion.
       */
      public java.lang.String getVerificationKeyVersion() {
        java.lang.Object ref = verificationKeyVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            verificationKeyVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Key version for rollovers
       * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       * @return The bytes for verificationKeyVersion.
       */
      public com.google.protobuf.ByteString
          getVerificationKeyVersionBytes() {
        java.lang.Object ref = verificationKeyVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          verificationKeyVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Key version for rollovers
       * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       * @param value The verificationKeyVersion to set.
       * @return This builder for chaining.
       */
      public Builder setVerificationKeyVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        verificationKeyVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Key version for rollovers
       * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerificationKeyVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        verificationKeyVersion_ = getDefaultInstance().getVerificationKeyVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Key version for rollovers
       * Must be in character class [a-zA-Z0-9_]. E.g., 'v1'
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       * @param value The bytes for verificationKeyVersion to set.
       * @return This builder for chaining.
       */
      public Builder setVerificationKeyVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        verificationKeyVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object verificationKeyId_ = "";
      /**
       * <pre>
       * Alias with which to identify public key to be used for verification
       * Must be in character class [a-zA-Z0-9_]
       * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       * @return Whether the verificationKeyId field is set.
       */
      public boolean hasVerificationKeyId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Alias with which to identify public key to be used for verification
       * Must be in character class [a-zA-Z0-9_]
       * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       * @return The verificationKeyId.
       */
      public java.lang.String getVerificationKeyId() {
        java.lang.Object ref = verificationKeyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            verificationKeyId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Alias with which to identify public key to be used for verification
       * Must be in character class [a-zA-Z0-9_]
       * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       * @return The bytes for verificationKeyId.
       */
      public com.google.protobuf.ByteString
          getVerificationKeyIdBytes() {
        java.lang.Object ref = verificationKeyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          verificationKeyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Alias with which to identify public key to be used for verification
       * Must be in character class [a-zA-Z0-9_]
       * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       * @param value The verificationKeyId to set.
       * @return This builder for chaining.
       */
      public Builder setVerificationKeyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        verificationKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alias with which to identify public key to be used for verification
       * Must be in character class [a-zA-Z0-9_]
       * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerificationKeyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        verificationKeyId_ = getDefaultInstance().getVerificationKeyId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alias with which to identify public key to be used for verification
       * Must be in character class [a-zA-Z0-9_]
       * For cross-compatibility with Apple, use MCC (https://en.wikipedia.org/wiki/Mobile_country_code)
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       * @param value The bytes for verificationKeyId to set.
       * @return This builder for chaining.
       */
      public Builder setVerificationKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        verificationKeyId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object signatureAlgorithm_ = "";
      /**
       * <pre>
       * ASN.1 OID for Algorithm Identifier. Supported algorithms are
       * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       * @return Whether the signatureAlgorithm field is set.
       */
      public boolean hasSignatureAlgorithm() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * ASN.1 OID for Algorithm Identifier. Supported algorithms are
       * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       * @return The signatureAlgorithm.
       */
      public java.lang.String getSignatureAlgorithm() {
        java.lang.Object ref = signatureAlgorithm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            signatureAlgorithm_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ASN.1 OID for Algorithm Identifier. Supported algorithms are
       * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       * @return The bytes for signatureAlgorithm.
       */
      public com.google.protobuf.ByteString
          getSignatureAlgorithmBytes() {
        java.lang.Object ref = signatureAlgorithm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signatureAlgorithm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ASN.1 OID for Algorithm Identifier. Supported algorithms are
       * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       * @param value The signatureAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setSignatureAlgorithm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signatureAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ASN.1 OID for Algorithm Identifier. Supported algorithms are
       * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignatureAlgorithm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signatureAlgorithm_ = getDefaultInstance().getSignatureAlgorithm();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ASN.1 OID for Algorithm Identifier. Supported algorithms are
       * either 1.2.840.10045.4.3.2 or 1.2.840.10045.4.3.4
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       * @param value The bytes for signatureAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setSignatureAlgorithmBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signatureAlgorithm_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SignatureInfo)
    }

    // @@protoc_insertion_point(class_scope:SignatureInfo)
    private static final at.roteskreuz.covidapp.protobuf.Export.SignatureInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new at.roteskreuz.covidapp.protobuf.Export.SignatureInfo();
    }

    public static at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SignatureInfo>
        PARSER = new com.google.protobuf.AbstractParser<SignatureInfo>() {
      @java.lang.Override
      public SignatureInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignatureInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignatureInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignatureInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TemporaryExposureKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TemporaryExposureKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     * @return Whether the keyData field is set.
     */
    boolean hasKeyData();
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     * @return The keyData.
     */
    com.google.protobuf.ByteString getKeyData();

    /**
     * <pre>
     * Varying risks associated with exposure depending on type of verification
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     * @return Whether the transmissionRiskLevel field is set.
     */
    boolean hasTransmissionRiskLevel();
    /**
     * <pre>
     * Varying risks associated with exposure depending on type of verification
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     * @return The transmissionRiskLevel.
     */
    int getTransmissionRiskLevel();

    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     * @return Whether the rollingStartIntervalNumber field is set.
     */
    boolean hasRollingStartIntervalNumber();
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     * @return The rollingStartIntervalNumber.
     */
    int getRollingStartIntervalNumber();

    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     * @return Whether the rollingPeriod field is set.
     */
    boolean hasRollingPeriod();
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     * @return The rollingPeriod.
     */
    int getRollingPeriod();
  }
  /**
   * Protobuf type {@code TemporaryExposureKey}
   */
  public static final class TemporaryExposureKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TemporaryExposureKey)
      TemporaryExposureKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TemporaryExposureKey.newBuilder() to construct.
    private TemporaryExposureKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TemporaryExposureKey() {
      keyData_ = com.google.protobuf.ByteString.EMPTY;
      rollingPeriod_ = 144;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TemporaryExposureKey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TemporaryExposureKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              keyData_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              transmissionRiskLevel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rollingStartIntervalNumber_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rollingPeriod_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.class, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder.class);
    }

    private int bitField0_;
    public static final int KEY_DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString keyData_;
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     * @return Whether the keyData field is set.
     */
    @java.lang.Override
    public boolean hasKeyData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     * @return The keyData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyData() {
      return keyData_;
    }

    public static final int TRANSMISSION_RISK_LEVEL_FIELD_NUMBER = 2;
    private int transmissionRiskLevel_;
    /**
     * <pre>
     * Varying risks associated with exposure depending on type of verification
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     * @return Whether the transmissionRiskLevel field is set.
     */
    @java.lang.Override
    public boolean hasTransmissionRiskLevel() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Varying risks associated with exposure depending on type of verification
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     * @return The transmissionRiskLevel.
     */
    @java.lang.Override
    public int getTransmissionRiskLevel() {
      return transmissionRiskLevel_;
    }

    public static final int ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER = 3;
    private int rollingStartIntervalNumber_;
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     * @return Whether the rollingStartIntervalNumber field is set.
     */
    @java.lang.Override
    public boolean hasRollingStartIntervalNumber() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     * @return The rollingStartIntervalNumber.
     */
    @java.lang.Override
    public int getRollingStartIntervalNumber() {
      return rollingStartIntervalNumber_;
    }

    public static final int ROLLING_PERIOD_FIELD_NUMBER = 4;
    private int rollingPeriod_;
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     * @return Whether the rollingPeriod field is set.
     */
    @java.lang.Override
    public boolean hasRollingPeriod() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     * @return The rollingPeriod.
     */
    @java.lang.Override
    public int getRollingPeriod() {
      return rollingPeriod_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, keyData_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, transmissionRiskLevel_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, rollingStartIntervalNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, rollingPeriod_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, keyData_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, transmissionRiskLevel_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rollingStartIntervalNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rollingPeriod_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey)) {
        return super.equals(obj);
      }
      at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey other = (at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey) obj;

      if (hasKeyData() != other.hasKeyData()) return false;
      if (hasKeyData()) {
        if (!getKeyData()
            .equals(other.getKeyData())) return false;
      }
      if (hasTransmissionRiskLevel() != other.hasTransmissionRiskLevel()) return false;
      if (hasTransmissionRiskLevel()) {
        if (getTransmissionRiskLevel()
            != other.getTransmissionRiskLevel()) return false;
      }
      if (hasRollingStartIntervalNumber() != other.hasRollingStartIntervalNumber()) return false;
      if (hasRollingStartIntervalNumber()) {
        if (getRollingStartIntervalNumber()
            != other.getRollingStartIntervalNumber()) return false;
      }
      if (hasRollingPeriod() != other.hasRollingPeriod()) return false;
      if (hasRollingPeriod()) {
        if (getRollingPeriod()
            != other.getRollingPeriod()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyData()) {
        hash = (37 * hash) + KEY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getKeyData().hashCode();
      }
      if (hasTransmissionRiskLevel()) {
        hash = (37 * hash) + TRANSMISSION_RISK_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getTransmissionRiskLevel();
      }
      if (hasRollingStartIntervalNumber()) {
        hash = (37 * hash) + ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getRollingStartIntervalNumber();
      }
      if (hasRollingPeriod()) {
        hash = (37 * hash) + ROLLING_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getRollingPeriod();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TemporaryExposureKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TemporaryExposureKey)
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.class, at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.Builder.class);
      }

      // Construct using at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        transmissionRiskLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rollingStartIntervalNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rollingPeriod_ = 144;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TemporaryExposureKey_descriptor;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey getDefaultInstanceForType() {
        return at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.getDefaultInstance();
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey build() {
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey buildPartial() {
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey result = new at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyData_ = keyData_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.transmissionRiskLevel_ = transmissionRiskLevel_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rollingStartIntervalNumber_ = rollingStartIntervalNumber_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rollingPeriod_ = rollingPeriod_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey) {
          return mergeFrom((at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey other) {
        if (other == at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey.getDefaultInstance()) return this;
        if (other.hasKeyData()) {
          setKeyData(other.getKeyData());
        }
        if (other.hasTransmissionRiskLevel()) {
          setTransmissionRiskLevel(other.getTransmissionRiskLevel());
        }
        if (other.hasRollingStartIntervalNumber()) {
          setRollingStartIntervalNumber(other.getRollingStartIntervalNumber());
        }
        if (other.hasRollingPeriod()) {
          setRollingPeriod(other.getRollingPeriod());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Key of infected user
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       * @return Whether the keyData field is set.
       */
      @java.lang.Override
      public boolean hasKeyData() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Key of infected user
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       * @return The keyData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKeyData() {
        return keyData_;
      }
      /**
       * <pre>
       * Key of infected user
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       * @param value The keyData to set.
       * @return This builder for chaining.
       */
      public Builder setKeyData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Key of infected user
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyData_ = getDefaultInstance().getKeyData();
        onChanged();
        return this;
      }

      private int transmissionRiskLevel_ ;
      /**
       * <pre>
       * Varying risks associated with exposure depending on type of verification
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       * @return Whether the transmissionRiskLevel field is set.
       */
      @java.lang.Override
      public boolean hasTransmissionRiskLevel() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Varying risks associated with exposure depending on type of verification
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       * @return The transmissionRiskLevel.
       */
      @java.lang.Override
      public int getTransmissionRiskLevel() {
        return transmissionRiskLevel_;
      }
      /**
       * <pre>
       * Varying risks associated with exposure depending on type of verification
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       * @param value The transmissionRiskLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTransmissionRiskLevel(int value) {
        bitField0_ |= 0x00000002;
        transmissionRiskLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Varying risks associated with exposure depending on type of verification
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransmissionRiskLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        transmissionRiskLevel_ = 0;
        onChanged();
        return this;
      }

      private int rollingStartIntervalNumber_ ;
      /**
       * <pre>
       * The interval number since epoch for which a key starts
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       * @return Whether the rollingStartIntervalNumber field is set.
       */
      @java.lang.Override
      public boolean hasRollingStartIntervalNumber() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The interval number since epoch for which a key starts
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       * @return The rollingStartIntervalNumber.
       */
      @java.lang.Override
      public int getRollingStartIntervalNumber() {
        return rollingStartIntervalNumber_;
      }
      /**
       * <pre>
       * The interval number since epoch for which a key starts
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       * @param value The rollingStartIntervalNumber to set.
       * @return This builder for chaining.
       */
      public Builder setRollingStartIntervalNumber(int value) {
        bitField0_ |= 0x00000004;
        rollingStartIntervalNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The interval number since epoch for which a key starts
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRollingStartIntervalNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rollingStartIntervalNumber_ = 0;
        onChanged();
        return this;
      }

      private int rollingPeriod_ = 144;
      /**
       * <pre>
       * Increments of 10 minutes describing how long a key is valid
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       * @return Whether the rollingPeriod field is set.
       */
      @java.lang.Override
      public boolean hasRollingPeriod() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Increments of 10 minutes describing how long a key is valid
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       * @return The rollingPeriod.
       */
      @java.lang.Override
      public int getRollingPeriod() {
        return rollingPeriod_;
      }
      /**
       * <pre>
       * Increments of 10 minutes describing how long a key is valid
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       * @param value The rollingPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setRollingPeriod(int value) {
        bitField0_ |= 0x00000008;
        rollingPeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Increments of 10 minutes describing how long a key is valid
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       * @return This builder for chaining.
       */
      public Builder clearRollingPeriod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rollingPeriod_ = 144;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TemporaryExposureKey)
    }

    // @@protoc_insertion_point(class_scope:TemporaryExposureKey)
    private static final at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey();
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TemporaryExposureKey>
        PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKey>() {
      @java.lang.Override
      public TemporaryExposureKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TemporaryExposureKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TemporaryExposureKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemporaryExposureKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TemporaryExposureKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TEKSignatureListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TEKSignatureList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    java.util.List<at.roteskreuz.covidapp.protobuf.Export.TEKSignature> 
        getSignaturesList();
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.TEKSignature getSignatures(int index);
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    int getSignaturesCount();
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder> 
        getSignaturesOrBuilderList();
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder getSignaturesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TEKSignatureList}
   */
  public static final class TEKSignatureList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TEKSignatureList)
      TEKSignatureListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TEKSignatureList.newBuilder() to construct.
    private TEKSignatureList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TEKSignatureList() {
      signatures_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TEKSignatureList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TEKSignatureList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                signatures_ = new java.util.ArrayList<at.roteskreuz.covidapp.protobuf.Export.TEKSignature>();
                mutable_bitField0_ |= 0x00000001;
              }
              signatures_.add(
                  input.readMessage(at.roteskreuz.covidapp.protobuf.Export.TEKSignature.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignatureList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignatureList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.class, at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.Builder.class);
    }

    public static final int SIGNATURES_FIELD_NUMBER = 1;
    private java.util.List<at.roteskreuz.covidapp.protobuf.Export.TEKSignature> signatures_;
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    @java.lang.Override
    public java.util.List<at.roteskreuz.covidapp.protobuf.Export.TEKSignature> getSignaturesList() {
      return signatures_;
    }
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder> 
        getSignaturesOrBuilderList() {
      return signatures_;
    }
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    @java.lang.Override
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TEKSignature getSignatures(int index) {
      return signatures_.get(index);
    }
    /**
     * <code>repeated .TEKSignature signatures = 1;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder getSignaturesOrBuilder(
        int index) {
      return signatures_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeMessage(1, signatures_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < signatures_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, signatures_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList)) {
        return super.equals(obj);
      }
      at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList other = (at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList) obj;

      if (!getSignaturesList()
          .equals(other.getSignaturesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSignaturesCount() > 0) {
        hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
        hash = (53 * hash) + getSignaturesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TEKSignatureList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TEKSignatureList)
        at.roteskreuz.covidapp.protobuf.Export.TEKSignatureListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignatureList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignatureList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.class, at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.Builder.class);
      }

      // Construct using at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignaturesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignatureList_descriptor;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList getDefaultInstanceForType() {
        return at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.getDefaultInstance();
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList build() {
        at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList buildPartial() {
        at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList result = new at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList(this);
        int from_bitField0_ = bitField0_;
        if (signaturesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            signatures_ = java.util.Collections.unmodifiableList(signatures_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signatures_ = signatures_;
        } else {
          result.signatures_ = signaturesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList) {
          return mergeFrom((at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList other) {
        if (other == at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList.getDefaultInstance()) return this;
        if (signaturesBuilder_ == null) {
          if (!other.signatures_.isEmpty()) {
            if (signatures_.isEmpty()) {
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignaturesIsMutable();
              signatures_.addAll(other.signatures_);
            }
            onChanged();
          }
        } else {
          if (!other.signatures_.isEmpty()) {
            if (signaturesBuilder_.isEmpty()) {
              signaturesBuilder_.dispose();
              signaturesBuilder_ = null;
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signaturesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignaturesFieldBuilder() : null;
            } else {
              signaturesBuilder_.addAllMessages(other.signatures_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<at.roteskreuz.covidapp.protobuf.Export.TEKSignature> signatures_ =
        java.util.Collections.emptyList();
      private void ensureSignaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          signatures_ = new java.util.ArrayList<at.roteskreuz.covidapp.protobuf.Export.TEKSignature>(signatures_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.TEKSignature, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder, at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder> signaturesBuilder_;

      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public java.util.List<at.roteskreuz.covidapp.protobuf.Export.TEKSignature> getSignaturesList() {
        if (signaturesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatures_);
        } else {
          return signaturesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public int getSignaturesCount() {
        if (signaturesBuilder_ == null) {
          return signatures_.size();
        } else {
          return signaturesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature getSignatures(int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);
        } else {
          return signaturesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, at.roteskreuz.covidapp.protobuf.Export.TEKSignature value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.set(index, value);
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.set(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(at.roteskreuz.covidapp.protobuf.Export.TEKSignature value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, at.roteskreuz.covidapp.protobuf.Export.TEKSignature value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(index, value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(
          at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends at.roteskreuz.covidapp.protobuf.Export.TEKSignature> values) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatures_);
          onChanged();
        } else {
          signaturesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder clearSignatures() {
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public Builder removeSignatures(int index) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.remove(index);
          onChanged();
        } else {
          signaturesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder getSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder getSignaturesOrBuilder(
          int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);  } else {
          return signaturesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public java.util.List<? extends at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder> 
           getSignaturesOrBuilderList() {
        if (signaturesBuilder_ != null) {
          return signaturesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatures_);
        }
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder addSignaturesBuilder() {
        return getSignaturesFieldBuilder().addBuilder(
            at.roteskreuz.covidapp.protobuf.Export.TEKSignature.getDefaultInstance());
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder addSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().addBuilder(
            index, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.getDefaultInstance());
      }
      /**
       * <code>repeated .TEKSignature signatures = 1;</code>
       */
      public java.util.List<at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder> 
           getSignaturesBuilderList() {
        return getSignaturesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.TEKSignature, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder, at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder> 
          getSignaturesFieldBuilder() {
        if (signaturesBuilder_ == null) {
          signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              at.roteskreuz.covidapp.protobuf.Export.TEKSignature, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder, at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder>(
                  signatures_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          signatures_ = null;
        }
        return signaturesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TEKSignatureList)
    }

    // @@protoc_insertion_point(class_scope:TEKSignatureList)
    private static final at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList();
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TEKSignatureList>
        PARSER = new com.google.protobuf.AbstractParser<TEKSignatureList>() {
      @java.lang.Override
      public TEKSignatureList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEKSignatureList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TEKSignatureList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TEKSignatureList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TEKSignatureList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TEKSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TEKSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Info about the signing key, version, algorithm, etc
     * </pre>
     *
     * <code>optional .SignatureInfo signature_info = 1;</code>
     * @return Whether the signatureInfo field is set.
     */
    boolean hasSignatureInfo();
    /**
     * <pre>
     * Info about the signing key, version, algorithm, etc
     * </pre>
     *
     * <code>optional .SignatureInfo signature_info = 1;</code>
     * @return The signatureInfo.
     */
    at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getSignatureInfo();
    /**
     * <pre>
     * Info about the signing key, version, algorithm, etc
     * </pre>
     *
     * <code>optional .SignatureInfo signature_info = 1;</code>
     */
    at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder getSignatureInfoOrBuilder();

    /**
     * <pre>
     * E.g., Batch 2 of 10
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     * @return Whether the batchNum field is set.
     */
    boolean hasBatchNum();
    /**
     * <pre>
     * E.g., Batch 2 of 10
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     * @return The batchNum.
     */
    int getBatchNum();

    /**
     * <code>optional int32 batch_size = 3;</code>
     * @return Whether the batchSize field is set.
     */
    boolean hasBatchSize();
    /**
     * <code>optional int32 batch_size = 3;</code>
     * @return The batchSize.
     */
    int getBatchSize();

    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code TEKSignature}
   */
  public static final class TEKSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TEKSignature)
      TEKSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TEKSignature.newBuilder() to construct.
    private TEKSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TEKSignature() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TEKSignature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TEKSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = signatureInfo_.toBuilder();
              }
              signatureInfo_ = input.readMessage(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signatureInfo_);
                signatureInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              batchNum_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              batchSize_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              at.roteskreuz.covidapp.protobuf.Export.TEKSignature.class, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder.class);
    }

    private int bitField0_;
    public static final int SIGNATURE_INFO_FIELD_NUMBER = 1;
    private at.roteskreuz.covidapp.protobuf.Export.SignatureInfo signatureInfo_;
    /**
     * <pre>
     * Info about the signing key, version, algorithm, etc
     * </pre>
     *
     * <code>optional .SignatureInfo signature_info = 1;</code>
     * @return Whether the signatureInfo field is set.
     */
    @java.lang.Override
    public boolean hasSignatureInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Info about the signing key, version, algorithm, etc
     * </pre>
     *
     * <code>optional .SignatureInfo signature_info = 1;</code>
     * @return The signatureInfo.
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getSignatureInfo() {
      return signatureInfo_ == null ? at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance() : signatureInfo_;
    }
    /**
     * <pre>
     * Info about the signing key, version, algorithm, etc
     * </pre>
     *
     * <code>optional .SignatureInfo signature_info = 1;</code>
     */
    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder getSignatureInfoOrBuilder() {
      return signatureInfo_ == null ? at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance() : signatureInfo_;
    }

    public static final int BATCH_NUM_FIELD_NUMBER = 2;
    private int batchNum_;
    /**
     * <pre>
     * E.g., Batch 2 of 10
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     * @return Whether the batchNum field is set.
     */
    @java.lang.Override
    public boolean hasBatchNum() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * E.g., Batch 2 of 10
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     * @return The batchNum.
     */
    @java.lang.Override
    public int getBatchNum() {
      return batchNum_;
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 3;
    private int batchSize_;
    /**
     * <code>optional int32 batch_size = 3;</code>
     * @return Whether the batchSize field is set.
     */
    @java.lang.Override
    public boolean hasBatchSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 batch_size = 3;</code>
     * @return The batchSize.
     */
    @java.lang.Override
    public int getBatchSize() {
      return batchSize_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getSignatureInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, batchNum_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, batchSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSignatureInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, batchNum_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, batchSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof at.roteskreuz.covidapp.protobuf.Export.TEKSignature)) {
        return super.equals(obj);
      }
      at.roteskreuz.covidapp.protobuf.Export.TEKSignature other = (at.roteskreuz.covidapp.protobuf.Export.TEKSignature) obj;

      if (hasSignatureInfo() != other.hasSignatureInfo()) return false;
      if (hasSignatureInfo()) {
        if (!getSignatureInfo()
            .equals(other.getSignatureInfo())) return false;
      }
      if (hasBatchNum() != other.hasBatchNum()) return false;
      if (hasBatchNum()) {
        if (getBatchNum()
            != other.getBatchNum()) return false;
      }
      if (hasBatchSize() != other.hasBatchSize()) return false;
      if (hasBatchSize()) {
        if (getBatchSize()
            != other.getBatchSize()) return false;
      }
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSignatureInfo()) {
        hash = (37 * hash) + SIGNATURE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureInfo().hashCode();
      }
      if (hasBatchNum()) {
        hash = (37 * hash) + BATCH_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getBatchNum();
      }
      if (hasBatchSize()) {
        hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBatchSize();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(at.roteskreuz.covidapp.protobuf.Export.TEKSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TEKSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TEKSignature)
        at.roteskreuz.covidapp.protobuf.Export.TEKSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                at.roteskreuz.covidapp.protobuf.Export.TEKSignature.class, at.roteskreuz.covidapp.protobuf.Export.TEKSignature.Builder.class);
      }

      // Construct using at.roteskreuz.covidapp.protobuf.Export.TEKSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signatureInfoBuilder_ == null) {
          signatureInfo_ = null;
        } else {
          signatureInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        batchNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        batchSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return at.roteskreuz.covidapp.protobuf.Export.internal_static_TEKSignature_descriptor;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature getDefaultInstanceForType() {
        return at.roteskreuz.covidapp.protobuf.Export.TEKSignature.getDefaultInstance();
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature build() {
        at.roteskreuz.covidapp.protobuf.Export.TEKSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public at.roteskreuz.covidapp.protobuf.Export.TEKSignature buildPartial() {
        at.roteskreuz.covidapp.protobuf.Export.TEKSignature result = new at.roteskreuz.covidapp.protobuf.Export.TEKSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (signatureInfoBuilder_ == null) {
            result.signatureInfo_ = signatureInfo_;
          } else {
            result.signatureInfo_ = signatureInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.batchNum_ = batchNum_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.batchSize_ = batchSize_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof at.roteskreuz.covidapp.protobuf.Export.TEKSignature) {
          return mergeFrom((at.roteskreuz.covidapp.protobuf.Export.TEKSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(at.roteskreuz.covidapp.protobuf.Export.TEKSignature other) {
        if (other == at.roteskreuz.covidapp.protobuf.Export.TEKSignature.getDefaultInstance()) return this;
        if (other.hasSignatureInfo()) {
          mergeSignatureInfo(other.getSignatureInfo());
        }
        if (other.hasBatchNum()) {
          setBatchNum(other.getBatchNum());
        }
        if (other.hasBatchSize()) {
          setBatchSize(other.getBatchSize());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        at.roteskreuz.covidapp.protobuf.Export.TEKSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (at.roteskreuz.covidapp.protobuf.Export.TEKSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private at.roteskreuz.covidapp.protobuf.Export.SignatureInfo signatureInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.SignatureInfo, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder, at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> signatureInfoBuilder_;
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       * @return Whether the signatureInfo field is set.
       */
      public boolean hasSignatureInfo() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       * @return The signatureInfo.
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo getSignatureInfo() {
        if (signatureInfoBuilder_ == null) {
          return signatureInfo_ == null ? at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance() : signatureInfo_;
        } else {
          return signatureInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      public Builder setSignatureInfo(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo value) {
        if (signatureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signatureInfo_ = value;
          onChanged();
        } else {
          signatureInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      public Builder setSignatureInfo(
          at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder builderForValue) {
        if (signatureInfoBuilder_ == null) {
          signatureInfo_ = builderForValue.build();
          onChanged();
        } else {
          signatureInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      public Builder mergeSignatureInfo(at.roteskreuz.covidapp.protobuf.Export.SignatureInfo value) {
        if (signatureInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              signatureInfo_ != null &&
              signatureInfo_ != at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance()) {
            signatureInfo_ =
              at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.newBuilder(signatureInfo_).mergeFrom(value).buildPartial();
          } else {
            signatureInfo_ = value;
          }
          onChanged();
        } else {
          signatureInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      public Builder clearSignatureInfo() {
        if (signatureInfoBuilder_ == null) {
          signatureInfo_ = null;
          onChanged();
        } else {
          signatureInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder getSignatureInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSignatureInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      public at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder getSignatureInfoOrBuilder() {
        if (signatureInfoBuilder_ != null) {
          return signatureInfoBuilder_.getMessageOrBuilder();
        } else {
          return signatureInfo_ == null ?
              at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.getDefaultInstance() : signatureInfo_;
        }
      }
      /**
       * <pre>
       * Info about the signing key, version, algorithm, etc
       * </pre>
       *
       * <code>optional .SignatureInfo signature_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          at.roteskreuz.covidapp.protobuf.Export.SignatureInfo, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder, at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder> 
          getSignatureInfoFieldBuilder() {
        if (signatureInfoBuilder_ == null) {
          signatureInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              at.roteskreuz.covidapp.protobuf.Export.SignatureInfo, at.roteskreuz.covidapp.protobuf.Export.SignatureInfo.Builder, at.roteskreuz.covidapp.protobuf.Export.SignatureInfoOrBuilder>(
                  getSignatureInfo(),
                  getParentForChildren(),
                  isClean());
          signatureInfo_ = null;
        }
        return signatureInfoBuilder_;
      }

      private int batchNum_ ;
      /**
       * <pre>
       * E.g., Batch 2 of 10
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       * @return Whether the batchNum field is set.
       */
      @java.lang.Override
      public boolean hasBatchNum() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * E.g., Batch 2 of 10
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       * @return The batchNum.
       */
      @java.lang.Override
      public int getBatchNum() {
        return batchNum_;
      }
      /**
       * <pre>
       * E.g., Batch 2 of 10
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       * @param value The batchNum to set.
       * @return This builder for chaining.
       */
      public Builder setBatchNum(int value) {
        bitField0_ |= 0x00000002;
        batchNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * E.g., Batch 2 of 10
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        batchNum_ = 0;
        onChanged();
        return this;
      }

      private int batchSize_ ;
      /**
       * <code>optional int32 batch_size = 3;</code>
       * @return Whether the batchSize field is set.
       */
      @java.lang.Override
      public boolean hasBatchSize() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 batch_size = 3;</code>
       * @return The batchSize.
       */
      @java.lang.Override
      public int getBatchSize() {
        return batchSize_;
      }
      /**
       * <code>optional int32 batch_size = 3;</code>
       * @param value The batchSize to set.
       * @return This builder for chaining.
       */
      public Builder setBatchSize(int value) {
        bitField0_ |= 0x00000004;
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batch_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        batchSize_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       * @return Whether the signature field is set.
       */
      @java.lang.Override
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields)
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TEKSignature)
    }

    // @@protoc_insertion_point(class_scope:TEKSignature)
    private static final at.roteskreuz.covidapp.protobuf.Export.TEKSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new at.roteskreuz.covidapp.protobuf.Export.TEKSignature();
    }

    public static at.roteskreuz.covidapp.protobuf.Export.TEKSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TEKSignature>
        PARSER = new com.google.protobuf.AbstractParser<TEKSignature>() {
      @java.lang.Override
      public TEKSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEKSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TEKSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TEKSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public at.roteskreuz.covidapp.protobuf.Export.TEKSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TemporaryExposureKeyExport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TemporaryExposureKeyExport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SignatureInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SignatureInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TemporaryExposureKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TemporaryExposureKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TEKSignatureList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TEKSignatureList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TEKSignature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TEKSignature_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014export.proto\"\321\001\n\032TemporaryExposureKeyE" +
      "xport\022\027\n\017start_timestamp\030\001 \001(\006\022\025\n\rend_ti" +
      "mestamp\030\002 \001(\006\022\016\n\006region\030\003 \001(\t\022\021\n\tbatch_n" +
      "um\030\004 \001(\005\022\022\n\nbatch_size\030\005 \001(\005\022\'\n\017signatur" +
      "e_infos\030\006 \003(\0132\016.SignatureInfo\022#\n\004keys\030\007 " +
      "\003(\0132\025.TemporaryExposureKey\"\227\001\n\rSignature" +
      "Info\022 \n\030verification_key_version\030\003 \001(\t\022\033" +
      "\n\023verification_key_id\030\004 \001(\t\022\033\n\023signature" +
      "_algorithm\030\005 \001(\tJ\004\010\001\020\002J\004\010\002\020\003R\rapp_bundle" +
      "_idR\017android_package\"\215\001\n\024TemporaryExposu" +
      "reKey\022\020\n\010key_data\030\001 \001(\014\022\037\n\027transmission_" +
      "risk_level\030\002 \001(\005\022%\n\035rolling_start_interv" +
      "al_number\030\003 \001(\005\022\033\n\016rolling_period\030\004 \001(\005:" +
      "\003144\"5\n\020TEKSignatureList\022!\n\nsignatures\030\001" +
      " \003(\0132\r.TEKSignature\"p\n\014TEKSignature\022&\n\016s" +
      "ignature_info\030\001 \001(\0132\016.SignatureInfo\022\021\n\tb" +
      "atch_num\030\002 \001(\005\022\022\n\nbatch_size\030\003 \001(\005\022\021\n\tsi" +
      "gnature\030\004 \001(\014B)\n\037at.roteskreuz.covidapp." +
      "protobufB\006Export"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_TemporaryExposureKeyExport_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TemporaryExposureKeyExport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TemporaryExposureKeyExport_descriptor,
        new java.lang.String[] { "StartTimestamp", "EndTimestamp", "Region", "BatchNum", "BatchSize", "SignatureInfos", "Keys", });
    internal_static_SignatureInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SignatureInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SignatureInfo_descriptor,
        new java.lang.String[] { "VerificationKeyVersion", "VerificationKeyId", "SignatureAlgorithm", });
    internal_static_TemporaryExposureKey_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TemporaryExposureKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TemporaryExposureKey_descriptor,
        new java.lang.String[] { "KeyData", "TransmissionRiskLevel", "RollingStartIntervalNumber", "RollingPeriod", });
    internal_static_TEKSignatureList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TEKSignatureList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TEKSignatureList_descriptor,
        new java.lang.String[] { "Signatures", });
    internal_static_TEKSignature_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TEKSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TEKSignature_descriptor,
        new java.lang.String[] { "SignatureInfo", "BatchNum", "BatchSize", "Signature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
